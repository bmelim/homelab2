version: "3.3"
services:
  # Prometheus running on the manager node
  prometheus:
    hostname: prometheus
    image: prom/prometheus:latest
    configs:
      - source: prometheus
        target: /etc/prometheus/prometheus.yml
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.homelab`)"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.http.routers.prometheus.entrypoints=http"
    command:
      - "--config.file"
      - "/etc/prometheus/prometheus.yml"
    volumes:
      - prometheus_data:/prometheus

  # Node exporter running on each node in the swarm
  node-exporter:
    hostname: node-exporter
    image: prom/node-exporter:latest
    deploy:
      mode: global
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'

  # Container metrics exporter running on each node in the swarm
  cadvisor:
    hostname: cadvisor
    # Normal cAdvisor doesn't work on ARM.
    image: unibaktr/cadvisor
    deploy:
      mode: global
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  jaeger:
    hostname: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      SPAN_STORAGE_TYPE: badger
      BADGER_EPHEMERAL: "false"
      BADGER_DIRECTORY_VALUE: /badger
      BADGER_DIRECTORY_KEY: /badger/key
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jaeger.rule=Host(`jaeger.homelab`)"
        - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
        - "traefik.http.routers.jaeger.entrypoints=http"
    volumes:
      - jaeger_data:/badger

  grafana:
    hostname: grafana
    image: grafana/grafana:latest
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana.homelab`)"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana.entrypoints=http"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://grafana.localhost
      - GF_PATHS_PROVISIONING=/provisioning
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  alertmanager:
    hostname: alertmanager
    image: prom/alertmanager
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.alertmanager.rule=Host(`alerts.homelab`)"
        - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
        - "traefik.http.routers.alertmanager.entrypoints=http"
    configs:
      - source: alertmanager
        target: /etc/alertmanager/alertmanager.yml
    volumes:
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    depends_on:
      - prometheus

volumes:
  prometheus_data: {}
  jaeger_data: {}
  grafana_data: {}
  alertmanager_data: {}

networks:
  default:
    external:
      name: traefik_internal

configs:
  prometheus:
    file: ./prometheus/prometheus.yaml
  alertmanager:
    file: ./alertmanager/alertmanager.yaml
